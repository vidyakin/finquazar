
/** Формирование первой формы - по всем счетам, без ИНН и субконто
 *  Данные - Массив объектов - прочитанные из экселя данные
 *  Период - Строка - выбранный пользователем период, по который нужно посчитать обороты
 */
export function form1(Данные, Период) {

    let [НПериода, ГодПериода] = Период.split('_')
    let Предст = НПериода == 1 ? "1 кв. " : 
                 НПериода == 2 ? "1 полугодие " :
                 НПериода == 3 ? "9 месяцев " : ""
    let ЗаголовокФормы = `Оборотно сальдовая ведомость за ${Предст}${ГодПериода} г.`
    
    let Результат = []
    // проходим по всем строкам
    Данные.forEach(СтрДанных => {
        if (СтрДанных.lType == "ОСВ_общая") {
            let ОборотыДт = СтрДанных.periodicAmounts.reduce((Об, СтрПериод) => {
                let [НомСтрПериода, ГодСтрПериода] = СтрПериод.p_id.split('_')
                return Об + (НомСтрПериода <= НПериода && ГодСтрПериода == ГодПериода ? СтрПериод.Dt : 0)
            }, СтрДанных.saldoStartDt)
            let ОборотыКт = СтрДанных.periodicAmounts.reduce((Об, СтрПериод) => {
                let [НомСтрПериода, ГодСтрПериода] = СтрПериод.p_id.split('_')
                return Об + (НомСтрПериода <= НПериода && ГодСтрПериода == ГодПериода ? СтрПериод.Kt : 0)
            }, СтрДанных.saldoStartKt)
            Результат.push({
                acc: СтрДанных.acc,
                accName: СтрДанных.accName,
                НачОстатокДт: СтрДанных.saldoStartDt,
                НачОстатокКт: СтрДанных.saldoStartKt,
                ОборотыДт: ОборотыДт,
                ОборотыКт: ОборотыКт,
                КонОстатокДт: СтрДанных.saldoStartDt + ОборотыДт,
                КонОстатокКт: СтрДанных.saldoStartKt + ОборотыКт
            })
        }        
    });
    return {Результат, ЗаголовокФормы}
}

export function form2(Данные, Период) {
    return 0
}

export function form3(Данные, Период) {
    return 0
}