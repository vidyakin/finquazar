/* eslint-disable no-useless-escape */

function breakPeriodToHeaderAndParts(Период) {
	
	let [НПериода, ГодПериода] = Период.split("_")
	
	let Предст
	
	switch (НПериода) {
	case "1":
		Предст = "1 кв. "
		break
	case "2": 
		Предст = "1 полугодие "
		break
	case "3":
		Предст = "9 месяцев "
		break
	}
		
	return [НПериода, ГодПериода, Предст]
}

function countLine(СтрДанных, НПериода, ГодПериода){
	let Dt = СтрДанных.periodicAmounts.reduce((Об, СтрПериод) => {
		let [НомСтрПериода, ГодСтрПериода] = СтрПериод.p_id.split("_")
		return Об + (НомСтрПериода <= НПериода && ГодСтрПериода == ГодПериода ? СтрПериод.Dt : 0)
	}, СтрДанных.DtStart)
	let Kt = СтрДанных.periodicAmounts.reduce((Об, СтрПериод) => {
		let [НомСтрПериода, ГодСтрПериода] = СтрПериод.p_id.split("_")
		return Об + (НомСтрПериода <= НПериода && ГодСтрПериода == ГодПериода ? СтрПериод.Kt : 0)
	}, СтрДанных.KtStart)
	
	// собираем конечное сальдо
	let DtEnd = СтрДанных.DtStart + Dt, KtEnd = СтрДанных.KtStart + Kt
	
	return {Dt, Kt, DtEnd, KtEnd} 
}

/** Формирование первой формы - по всем счетам, без ИНН и субконто
 *  Данные - Массив объектов - прочитанные из экселя данные
 *  Период - Строка - выбранный пользователем период, по который нужно посчитать обороты
 */
export function form1(Данные, Период) {

	let [НПериода, ГодПериода, Предст] = breakPeriodToHeaderAndParts(Период)
	let ЗаголовокФормы = `Оборотно сальдовая ведомость за ${Предст}${ГодПериода} г.`
    
	let Результат = []
	// проходим по всем строкам
	Данные.forEach(СтрДанных => {
		if (СтрДанных.lType == "ОСВ_общая") {
			let ПодсчетПоСтроке = countLine(СтрДанных, НПериода, ГодПериода)
			Результат.push({
				...СтрДанных,
				...ПодсчетПоСтроке
			})
		}        
	})
	return {Результат, ЗаголовокФормы}
}

export function form2(Данные, Счет, Период) {
	let [НПериода, ГодПериода, Предст] = breakPeriodToHeaderAndParts(Период)
	let ЗаголовокФормы = `Оборотно сальдовая ведомость по счету ${Счет} за ${Предст}${ГодПериода} г.`
    
	let Результат = []

	// проходим по всем строкам
	Данные.forEach(СтрДанных => {
		// логика 
		// - если ОСВ_общая и счет подходит (включая субсчета) - берем
		// - если ОСВ_[СЧЕТ] - берем
		let accAndSub = СтрДанных.lType == "ОСВ_общая" && СтрДанных.acc.search("^"+Счет+"\.?") !== -1
		if (accAndSub || СтрДанных.lType.search("ОСВ_"+Счет)!== -1) {
			let ПодсчетПоСтроке = countLine(СтрДанных, НПериода, ГодПериода)
			Результат.push({
				...СтрДанных,
				...ПодсчетПоСтроке
			})
		}
	})

	return {Результат, ЗаголовокФормы}
}

export function form3(Данные, Период) {
	return 0
}